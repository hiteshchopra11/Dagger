package com.example.daggerandroid

import android.os.Bundle
import androidx.appcompat.app.AppCompatActivity
import com.example.daggerandroid.di.CarComponent
import com.example.daggerandroid.di.DaggerCarComponent
import javax.inject.Inject

class MainActivity : AppCompatActivity() {

    //Field Injection using @Inject annotation
    @Inject
    lateinit var car1: Car
    @Inject
    lateinit var car2: Car

    //Late initialise CarComponent
    lateinit var carComponent: CarComponent

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        // Create an instance of the CarComponent using DaggerCarComponent(generated by Dagger)
        carComponent = DaggerCarComponent.create()

        // Inject MainActivity in CarComponent, all variables of MainActivity are injected inside CarComponent
        carComponent.inject(this)

        //Call the function driveCar()
        car1.driveCar()
        car2.driveCar()
    }
}


/** Note-: If we use Field Injection in Activity directly we will get a NullPointerException because
 *  MainActivity instance is created by Android and not by Dagger, we need to tell Dagger to create all
 *  variables which are marked as inject inside MainActivity to instantiate those objects
 */
